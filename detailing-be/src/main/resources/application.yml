frontend:
  url: https://highend-zke6.onrender.com

backend:
  url: https://highend-1.onrender.com

website:
  domain: highend-zke6.onrender.com

spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  datasource:
    url: ${DB_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: none

  config:
    activate:
      on-profile: docker

  sql:
    init:
      platform: mysql
      mode: always

auth0:
  domain: dev-vmtwqb6p6lr3if0d.us.auth0.com
  clientId: ${AUTH0_CLIENT_ID}
  clientSecret: ${AUTH0_CLIENT_SECRET}
  audience: https://highenddetailing/api
  issuer: https://dev-vmtwqb6p6lr3if0d.us.auth0.com/

okta:
  oauth2:
    issuer: https://dev-vmtwqb6p6lr3if0d.us.auth0.com/
    audience: https://highenddetailing/api

server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: admin
    password: pwd
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true

  web:
    resources:
      static-locations: classpath:/custom/, classpath:/static/

auth0:
  domain: test-domain.auth0.com
  clientId: testClientId
  clientSecret: testClientSecret
  audience: test-audience
  issuer: https://test-domain.auth0.com/

okta:
  oauth2:
    issuer: https://test-domain.auth0.com/
    audience: test-audience
