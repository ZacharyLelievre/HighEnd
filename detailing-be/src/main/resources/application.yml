# Common configuration (shared across all profiles)
frontend:
  url: http://localhost:3000/

backend:
  url: http://localhost:8080/

website:
  domain: localhost

auth0:
  domain: ${AUTH0_DOMAIN}
  clientId: ${AUTH0_CLIENT_ID}
  clientSecret: ${AUTH0_CLIENT_SECRET}
  audience: ${AUTH0_AUDIENCE}
  issuer: https://${AUTH0_DOMAIN}/

okta:
  oauth2:
    issuer: https://${AUTH0_DOMAIN}/
    audience: ${AUTH0_AUDIENCE}

server:
  port: 8080

---

# Local Development Profile (used with `docker-compose`)
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://mysql1/highenddetailing-db
    username: admin
    password: pwd
  jpa:
    hibernate:
      ddl-auto: none
  sql:
    init:
      platform: mysql
      mode: always

---

# Test Profile (used during testing with H2 database)
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: admin
    password: pwd
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
  web:
    resources:
      static-locations: classpath:/custom/, classpath:/static/

---

# Production Profile (used with AWS RDS)
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${SPRING_DATASOURCE_URL} # AWS RDS URL (set in Render environment variables)
    username: ${SPRING_DATASOURCE_USERNAME} # AWS RDS username
    password: ${SPRING_DATASOURCE_PASSWORD} # AWS RDS password
  jpa:
    hibernate:
      ddl-auto: update # Change as per your requirement (e.g., none for production)
    database-platform: org.hibernate.dialect.MySQL8Dialect