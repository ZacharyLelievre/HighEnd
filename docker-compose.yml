version: "3.9"

services:
  db:
    image: mysql:8
    container_name: highend-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: high_end_db
      MYSQL_USER: ${SPRING_DATASOURCE_USERNAME}
      MYSQL_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  backend:
    build:
      context: ./detailing-be
      dockerfile: Dockerfile
    hostname: highenddetailing
    ports:
      - "8081:8080"
    environment:
      AUTH0_ISSUER: https://dev-vmtwqb6p6lr3if0d.us.auth0.com/
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      spring.datasource.url: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://backend:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./detailing-fe
      dockerfile: Dockerfile
      args:
        REACT_APP_AUTH0_DOMAIN: ${AUTH0_DOMAIN}
        REACT_APP_AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
        REACT_APP_AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
        REACT_APP_AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
        REACT_APP_AUTH0_CALLBACK_URL: "http://localhost:3000"
        REACT_APP_API_SERVER_URL: "http://localhost:3000"
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./detailing-fe:/app
      - /app/node_modules
      - /app/build
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: PhpMyAdmin
    restart: always
    ports:
      - "5013:80"
    environment:
      PMA_HOST: db # Change PMA_HOST to 'db' since that's the service name of the MySQL container
      PMA_PORT: 3306 # Explicitly specify the MySQL port (optional but recommended)
      PMA_USER: admin # Set the correct MySQL username
      PMA_PASSWORD: adminpass # Set the correct MySQL password
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
